// Automatically generated by GDevelop.js/scripts/generate-types.js
declare class gdBehaviorMetadata {
  getName(): string;
  getFullName(): string;
  getDefaultName(): string;
  getDescription(): string;
  getGroup(): string;
  getIconFilename(): string;
  getHelpPath(): string;
  addScopedCondition(name: string, fullname: string, description: string, sentence: string, group: string, icon: string, smallicon: string): gdInstructionMetadata;
  addScopedAction(name: string, fullname: string, description: string, sentence: string, group: string, icon: string, smallicon: string): gdInstructionMetadata;
  addCondition(name: string, fullname: string, description: string, sentence: string, group: string, icon: string, smallicon: string): gdInstructionMetadata;
  addAction(name: string, fullname: string, description: string, sentence: string, group: string, icon: string, smallicon: string): gdInstructionMetadata;
  addExpression(name: string, fullname: string, description: string, group: string, smallicon: string): gdExpressionMetadata;
  addStrExpression(name: string, fullname: string, description: string, group: string, smallicon: string): gdExpressionMetadata;
  addExpressionAndCondition(type: string, name: string, fullname: string, description: string, sentenceName: string, group: string, icon: string): gdMultipleInstructionMetadata;
  addExpressionAndConditionAndAction(type: string, name: string, fullname: string, description: string, sentenceName: string, group: string, icon: string): gdMultipleInstructionMetadata;
  addDuplicatedAction(newActionName: string, copiedActionName: string): gdInstructionMetadata;
  addDuplicatedCondition(newConditionName: string, copiedConditionName: string): gdInstructionMetadata;
  addDuplicatedExpression(newExpressionName: string, copiedExpressionName: string): gdExpressionMetadata;
  addDuplicatedStrExpression(newExpressionName: string, copiedExpressionName: string): gdExpressionMetadata;
  getAllActions(): gdMapStringInstructionMetadata;
  getAllConditions(): gdMapStringInstructionMetadata;
  getAllExpressions(): gdMapStringExpressionMetadata;
  getAllStrExpressions(): gdMapStringExpressionMetadata;
  setIncludeFile(includeFile: string): gdBehaviorMetadata;
  addIncludeFile(includeFile: string): gdBehaviorMetadata;
  addRequiredFile(resourceFile: string): gdBehaviorMetadata;
  setObjectType(objectType: string): gdBehaviorMetadata;
  getObjectType(): string;
  getRequiredBehaviorTypes(): gdVectorString;
  isPrivate(): boolean;
  setPrivate(): gdBehaviorMetadata;
  isHidden(): boolean;
  setHidden(): gdBehaviorMetadata;
  get(): gdBehavior;
  getSharedDataInstance(): gdBehaviorsSharedData;
  delete(): void;
  ptr: number;
};