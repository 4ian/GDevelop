// Automatically generated by GDevelop.js/scripts/generate-types.js
declare class gdVariable {
  static Unknown: 0;
  static String: 1;
  static Number: 2;
  static Boolean: 3;
  static Structure: 4;
  static Array: 5;
  constructor(): void;
  static isPrimitive(type: Variable_Type): boolean;
  getType(): Variable_Type;
  castTo(type: string): void;
  setString(str: string): void;
  getString(): string;
  setValue(val: number): void;
  getValue(): number;
  setBool(val: boolean): void;
  getBool(): boolean;
  setFolded(val: boolean): void;
  isFolded(): boolean;
  getChildrenCount(): number;
  contains(variableToSearch: gdVariable, recursive: boolean): boolean;
  hasChild(str: string): boolean;
  getChild(str: string): gdVariable;
  removeChild(name: string): void;
  renameChild(oldName: string, newName: string): boolean;
  getAllChildrenNames(): gdVectorString;
  removeRecursively(variableToRemove: gdVariable): void;
  getAtIndex(index: number): gdVariable;
  pushNew(): gdVariable;
  removeAtIndex(index: number): void;
  getAllChildrenArray(): gdVectorVariable;
  moveChildInArray(oldIndex: number, newIndex: number): void;
  insertAtIndex(variable: gdVariable, index: number): boolean;
  insertChild(name: string, variable: gdVariable): boolean;
  serializeTo(element: gdSerializerElement): void;
  unserializeFrom(element: gdSerializerElement): void;
  resetPersistentUuid(): gdVariable;
  clearPersistentUuid(): gdVariable;
  delete(): void;
  ptr: number;
};