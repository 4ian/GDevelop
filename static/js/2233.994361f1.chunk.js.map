{"version":3,"file":"static/js/2233.994361f1.chunk.js","mappings":"2LAKO,IAAIA,EAAO,CACdC,SAAU,CACNC,YAAa,MAEjBC,SAAU,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MACzCC,iBAAkB,CACd,CAAEC,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,MAExBC,iBAAkB,CACd,CAAEF,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,OAGjBE,EAAW,CAClBC,aAAc,GACdC,YAAY,EACZC,aAAc,OACdR,SAAU,CACN,CAAEE,KAAM,IAAKC,MAAO,IAAKM,MAAO,yBAChC,CAAEP,KAAM,IAAKC,MAAO,IAAKM,MAAO,mBAChC,CAAEP,KAAM,IAAKC,MAAO,IAAKM,MAAO,qBAEpCC,SAAU,CACN,KACA,WACA,YACA,QACA,KACA,MACA,OACA,WACA,WACA,UACA,UACA,SACA,MACA,QACA,MACA,OACA,SACA,MACA,SACA,SACA,MACA,OACA,SACA,OACA,UACA,UACA,QACA,OACA,aACA,OACA,aACA,MACA,OACA,WACA,KACA,SACA,SACA,QACA,WACA,OACA,OACA,OACA,MACA,QACA,QACA,OACA,OACA,MACA,QACA,OACA,QACA,YACA,OACA,QACA,SACA,UACA,OACA,QACA,WACA,WACA,aACA,KACA,SACA,UACA,OACA,UACA,QACA,UACA,OACA,OACA,MACA,OACA,QACA,UACA,YACA,cACA,SACA,kBACA,cACA,UACA,WACA,MACA,QACA,UACA,MACA,QACA,UACA,OACA,MACA,MACA,QACA,UACA,WACA,SACA,YACA,UACA,UACA,YACA,UACA,UACA,MACA,eACA,MACA,SACA,MACA,OACA,QACA,OACA,QACA,KACA,UACA,SACA,UACA,OAEJC,UAAW,CAAC,OAAQ,QAAS,OAC7BC,UAAW,CACP,IACA,OACA,IACA,KACA,IACA,KACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,UACA,SACA,UACA,WAEJC,UAAW,CACPC,KAAM,CACF,CAAC,oBAAqB,cACtB,CAAC,2CAA4C,gBAC7C,CACI,yGACA,CAAC,UAAW,QAAS,aAEzB,CACI,kCACA,CACIC,MAAO,CACH,YAAa,UACb,aAAc,WACd,aAAc,YACd,WAAY,gBAIxB,CAAC,iCAAkC,UACnC,CAAEC,QAAS,eACX,CAAEA,QAAS,aAEfC,WAAY,CAAC,CAAC,aAAc,SAAU,CAAC,QAAS,YAChDC,QAAS,CACL,CAAC,KAAM,SAAU,WACjB,CAAC,SAAU,SAAU,qBAEzBC,gBAAiB,CACb,CAAC,MAAO,iBACR,CAAC,IAAK,SAAU,WAChB,CAAC,WAAY,UACb,CAAC,QAAS,UACV,CAAC,MAAO,SAAU,a","sources":["../node_modules/monaco-editor/esm/vs/basic-languages/clojure/clojure.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: ';;',\n    },\n    brackets: [['(', ')'], ['{', '}'], ['[', ']']],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ],\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.clj',\n    brackets: [\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n    ],\n    keywords: [\n        'ns',\n        'ns-unmap',\n        'create-ns',\n        'in-ns',\n        'fn',\n        'def',\n        'defn',\n        'defmacro',\n        'defmulti',\n        'defonce',\n        'require',\n        'import',\n        'new',\n        'refer',\n        'pos',\n        'pos?',\n        'filter',\n        'map',\n        'reduce',\n        'repeat',\n        'key',\n        'rest',\n        'concat',\n        'into',\n        'reverse',\n        'iterate',\n        'range',\n        'drop',\n        'drop-while',\n        'take',\n        'take-while',\n        'neg',\n        'neg?',\n        'bound-fn',\n        'if',\n        'if-not',\n        'if-let',\n        'case,',\n        'contains',\n        'conj',\n        'disj',\n        'sort',\n        'get',\n        'assoc',\n        'merge',\n        'keys',\n        'vals',\n        'nth',\n        'first',\n        'last',\n        'count',\n        'contains?',\n        'cond',\n        'condp',\n        'cond->',\n        'cond->>',\n        'when',\n        'while',\n        'when-not',\n        'when-let',\n        'when-first',\n        'do',\n        'future',\n        'comment',\n        'doto',\n        'locking',\n        'proxy',\n        'println',\n        'type',\n        'meta',\n        'var',\n        'as->',\n        'reify',\n        'deftype',\n        'defrecord',\n        'defprotocol',\n        'extend',\n        'extend-protocol',\n        'extend-type',\n        'specify',\n        'specify!',\n        'try',\n        'catch',\n        'finally',\n        'let',\n        'letfn',\n        'binding',\n        'loop',\n        'for',\n        'seq',\n        'doseq',\n        'dotimes',\n        'when-let',\n        'if-let',\n        'when-some',\n        'if-some',\n        'this-as',\n        'defmethod',\n        'testing',\n        'deftest',\n        'are',\n        'use-fixtures',\n        'use',\n        'remove',\n        'run',\n        'run*',\n        'fresh',\n        'alt!',\n        'alt!!',\n        'go',\n        'go-loop',\n        'thread',\n        'boolean',\n        'str',\n    ],\n    constants: ['true', 'false', 'nil'],\n    operators: [\n        '=',\n        'not=',\n        '<',\n        '<=',\n        '>',\n        '>=',\n        'and',\n        'or',\n        'not',\n        'inc',\n        'dec',\n        'max',\n        'min',\n        'rem',\n        'bit-and',\n        'bit-or',\n        'bit-xor',\n        'bit-not',\n    ],\n    tokenizer: {\n        root: [\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\n            [/[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?/, 'number.float'],\n            [\n                /(?:\\b(?:(ns|def|defn|defn-|defmacro|defmulti|defonce|ns|ns-unmap|fn))(?![\\w-]))(\\s+)((?:\\w|\\-|\\!|\\?)*)/,\n                ['keyword', 'white', 'variable'],\n            ],\n            [\n                /[a-zA-Z_#][a-zA-Z0-9_\\-\\?\\!\\*]*/,\n                {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@constants': 'constant',\n                        '@operators': 'operators',\n                        '@default': 'identifier',\n                    },\n                },\n            ],\n            [/\\/#\"(?:\\.|(?:\\\")|[^\"\"\\n])*\"\\/g/, 'regexp'],\n            { include: '@whitespace' },\n            { include: '@strings' },\n        ],\n        whitespace: [[/[ \\t\\r\\n]+/, 'white'], [/;;.*$/, 'comment']],\n        strings: [\n            [/\"$/, 'string', '@popall'],\n            [/\"(?=.)/, 'string', '@multiLineString'],\n        ],\n        multiLineString: [\n            [/\\\\./, 'string.escape'],\n            [/\"/, 'string', '@popall'],\n            [/.(?=.*\")/, 'string'],\n            [/.*\\\\$/, 'string'],\n            [/.*$/, 'string', '@popall'],\n        ],\n    },\n};\n"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","ignoreCase","tokenPostfix","token","keywords","constants","operators","tokenizer","root","cases","include","whitespace","strings","multiLineString"],"sourceRoot":""}