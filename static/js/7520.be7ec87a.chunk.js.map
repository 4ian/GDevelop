{"version":3,"file":"static/js/7520.be7ec87a.chunk.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    // the default separators except `$-`\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        lineComment: '#',\n        blockComment: ['<#', '#>'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"', notIn: ['string'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.ps1',\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.square', open: '[', close: ']' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\n    ],\n    keywords: [\n        'begin', 'break', 'catch', 'class', 'continue', 'data',\n        'define', 'do', 'dynamicparam', 'else', 'elseif', 'end',\n        'exit', 'filter', 'finally', 'for', 'foreach', 'from',\n        'function', 'if', 'in', 'param', 'process', 'return',\n        'switch', 'throw', 'trap', 'try', 'until', 'using',\n        'var', 'while', 'workflow', 'parallel', 'sequence', 'inlinescript', 'configuration'\n    ],\n    helpKeywords: /SYNOPSIS|DESCRIPTION|PARAMETER|EXAMPLE|INPUTS|OUTPUTS|NOTES|LINK|COMPONENT|ROLE|FUNCTIONALITY|FORWARDHELPTARGETNAME|FORWARDHELPCATEGORY|REMOTEHELPRUNSPACE|EXTERNALHELP/,\n    // we include these common regular expressions\n    symbols: /[=><!~?&%|+\\-*\\/\\^;\\.,]+/,\n    escapes: /`(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // commands and keywords\n            [/[a-zA-Z_][\\w-]*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': ''\n                    }\n                }],\n            // whitespace\n            [/[ \\t\\r\\n]+/, ''],\n            // labels\n            [/^:\\w*/, 'metatag'],\n            // variables\n            [/\\$(\\{((global|local|private|script|using):)?[\\w]+\\}|((global|local|private|script|using):)?[\\w]+)/, 'variable'],\n            // Comments\n            [/<#/, 'comment', '@comment'],\n            [/#.*$/, 'comment'],\n            // delimiters\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\n            [/\\d+?/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings:\n            [/\\@\"/, 'string', '@herestring.\"'],\n            [/\\@'/, 'string', '@herestring.\\''],\n            [/\"/, {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: '@string.\"' }\n                    }\n                }],\n            [/'/, {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: '@string.\\'' }\n                    }\n                }],\n        ],\n        string: [\n            [/[^\"'\\$`]+/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/@escapes/, {\n                    cases: {\n                        '@eos': { token: 'string.escape', next: '@popall' },\n                        '@default': 'string.escape'\n                    }\n                }],\n            [/`./, {\n                    cases: {\n                        '@eos': { token: 'string.escape.invalid', next: '@popall' },\n                        '@default': 'string.escape.invalid'\n                    }\n                }],\n            [/\\$[\\w]+$/, {\n                    cases: {\n                        '$S2==\"': { token: 'variable', next: '@popall' },\n                        '@default': { token: 'string', next: '@popall' }\n                    }\n                }],\n            [/\\$[\\w]+/, {\n                    cases: {\n                        '$S2==\"': 'variable',\n                        '@default': 'string'\n                    }\n                }],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': {\n                            cases: {\n                                '@eos': { token: 'string', next: '@popall' },\n                                '@default': 'string'\n                            }\n                        }\n                    }\n                }],\n        ],\n        herestring: [\n            [/^\\s*([\"'])@/, {\n                    cases: {\n                        '$1==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }],\n            [/[^\\$`]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/`./, 'string.escape.invalid'],\n            [/\\$[\\w]+/, {\n                    cases: {\n                        '$S2==\"': 'variable',\n                        '@default': 'string'\n                    }\n                }],\n        ],\n        comment: [\n            [/[^#\\.]+/, 'comment'],\n            [/#>/, 'comment', '@pop'],\n            [/(\\.)(@helpKeywords)(?!\\w)/, { token: 'comment.keyword.$2' }],\n            [/[\\.#]/, 'comment']\n        ],\n    },\n};\n"],"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","ignoreCase","tokenPostfix","token","keywords","helpKeywords","symbols","escapes","tokenizer","root","cases","next","string","herestring","comment"],"sourceRoot":""}