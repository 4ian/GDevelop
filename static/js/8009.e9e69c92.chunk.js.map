{"version":3,"file":"static/js/8009.e9e69c92.chunk.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/basic-languages/rust/rust.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '[', close: ']' },\n        { open: '{', close: '}' },\n        { open: '(', close: ')' },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    tokenPostfix: '.rust',\n    defaultToken: 'invalid',\n    keywords: [\n        'as', 'box', 'break', 'const', 'continue', 'crate', 'else', 'enum',\n        'extern', 'false', 'fn', 'for', 'if', 'impl', 'in', 'let', 'loop',\n        'match', 'mod', 'move', 'mut', 'pub', 'ref', 'return', 'self',\n        'static', 'struct', 'super', 'trait', 'true', 'type', 'unsafe', 'use',\n        'where', 'while', 'catch', 'default', 'union', 'static', 'abstract',\n        'alignof', 'become', 'do', 'final', 'macro', 'offsetof', 'override',\n        'priv', 'proc', 'pure', 'sizeof', 'typeof', 'unsized', 'virtual',\n        'yield',\n    ],\n    typeKeywords: [\n        'Self', 'm32', 'm64', 'm128', 'f80', 'f16', 'f128', 'int', 'uint',\n        'float', 'char', 'bool', 'u8', 'u16', 'u32', 'u64', 'f32', 'f64', 'i8',\n        'i16', 'i32', 'i64', 'str', 'Option', 'Either', 'c_float', 'c_double',\n        'c_void', 'FILE', 'fpos_t', 'DIR', 'dirent', 'c_char', 'c_schar',\n        'c_uchar', 'c_short', 'c_ushort', 'c_int', 'c_uint', 'c_long',\n        'c_ulong', 'size_t', 'ptrdiff_t', 'clock_t', 'time_t', 'c_longlong',\n        'c_ulonglong', 'intptr_t', 'uintptr_t', 'off_t', 'dev_t', 'ino_t',\n        'pid_t', 'mode_t', 'ssize_t',\n    ],\n    constants: [\n        'true', 'false', 'Some', 'None', 'Left', 'Right', 'Ok', 'Err',\n    ],\n    supportConstants: [\n        'EXIT_FAILURE', 'EXIT_SUCCESS', 'RAND_MAX', 'EOF', 'SEEK_SET',\n        'SEEK_CUR', 'SEEK_END', '_IOFBF', '_IONBF', '_IOLBF', 'BUFSIZ',\n        'FOPEN_MAX', 'FILENAME_MAX', 'L_tmpnam', 'TMP_MAX', 'O_RDONLY',\n        'O_WRONLY', 'O_RDWR', 'O_APPEND', 'O_CREAT', 'O_EXCL', 'O_TRUNC',\n        'S_IFIFO', 'S_IFCHR', 'S_IFBLK', 'S_IFDIR', 'S_IFREG', 'S_IFMT',\n        'S_IEXEC', 'S_IWRITE', 'S_IREAD', 'S_IRWXU', 'S_IXUSR', 'S_IWUSR',\n        'S_IRUSR', 'F_OK', 'R_OK', 'W_OK', 'X_OK', 'STDIN_FILENO',\n        'STDOUT_FILENO', 'STDERR_FILENO',\n    ],\n    supportMacros: [\n        'format!', 'print!', 'println!', 'panic!', 'format_args!', 'unreachable!',\n        'write!', 'writeln!'\n    ],\n    operators: [\n        '!', '!=', '%', '%=', '&', '&=', '&&', '*', '*=', '+', '+=', '-', '-=',\n        '->', '.', '..', '...', '/', '/=', ':', ';', '<<', '<<=', '<', '<=', '=',\n        '==', '=>', '>', '>=', '>>', '>>=', '@', '^', '^=', '|', '|=', '||', '_',\n        '?', '#'\n    ],\n    escapes: /\\\\([nrt0\\\"''\\\\]|x\\h{2}|u\\{\\h{1,6}\\})/,\n    delimiters: /[,]/,\n    symbols: /[\\#\\!\\%\\&\\*\\+\\-\\.\\/\\:\\;\\<\\=\\>\\@\\^\\|_\\?]+/,\n    intSuffixes: /[iu](8|16|32|64|128|size)/,\n    floatSuffixes: /f(32|64)/,\n    tokenizer: {\n        root: [\n            [/[a-zA-Z][a-zA-Z0-9_]*!?|_[a-zA-Z0-9_]+/,\n                {\n                    cases: {\n                        '@typeKeywords': 'keyword.type',\n                        '@keywords': 'keyword',\n                        '@supportConstants': 'keyword',\n                        '@supportMacros': 'keyword',\n                        '@constants': 'keyword',\n                        '@default': 'identifier',\n                    }\n                }\n            ],\n            // Designator\n            [/\\$/, 'identifier'],\n            // Lifetime annotations\n            [/'[a-zA-Z_][a-zA-Z0-9_]*(?=[^\\'])/, 'identifier'],\n            // Byte literal\n            [/'\\S'/, 'string.byteliteral'],\n            // Strings\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string' }],\n            { include: '@numbers' },\n            // Whitespace + comments\n            { include: '@whitespace' },\n            [/@delimiters/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@default': 'delimiter'\n                    }\n                }],\n            [/[{}()\\[\\]<>]/, '@brackets'],\n            [/@symbols/, { cases: { '@operators': 'operator', '@default': '' } }],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            [/\\/\\*/, 'comment', '@push'],\n            [\"\\\\*/\", 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ],\n        numbers: [\n            //Octal\n            [/(0o[0-7_]+)(@intSuffixes)?/, { token: 'number' }],\n            //Binary\n            [/(0b[0-1_]+)(@intSuffixes)?/, { token: 'number' }],\n            //Exponent\n            [/[\\d][\\d_]*(\\.[\\d][\\d_]*)?[eE][+-][\\d_]+(@floatSuffixes)?/, { token: 'number' }],\n            //Float\n            [/\\b(\\d\\.?[\\d_]*)(@floatSuffixes)?\\b/, { token: 'number' }],\n            //Hexadecimal\n            [/(0x[\\da-fA-F]+)_?(@intSuffixes)?/, { token: 'number' }],\n            //Integer\n            [/[\\d][\\d_]*(@intSuffixes?)?/, { token: 'number' }],\n        ]\n    }\n};\n"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","tokenPostfix","defaultToken","keywords","typeKeywords","constants","supportConstants","supportMacros","operators","escapes","delimiters","symbols","intSuffixes","floatSuffixes","tokenizer","root","cases","token","bracket","next","include","whitespace","comment","string","numbers"],"sourceRoot":""}