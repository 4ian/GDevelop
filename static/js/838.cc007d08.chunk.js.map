{"version":3,"file":"static/js/838.cc007d08.chunk.js","mappings":"0LAKO,IAAIA,EAAO,CACdC,SAAU,CACNC,aAAc,CAAC,UAAQ,WAE3BC,SAAU,CACN,CAAC,IAAK,MAEVC,iBAAkB,CACd,CAAEC,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAMC,MAAO,KACrB,CAAED,KAAM,IAAKC,MAAO,MAExBC,iBAAkB,CACd,CAAEF,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAMC,MAAO,KACrB,CAAED,KAAM,IAAKC,MAAO,OAGjBE,EAAW,CAClBC,aAAc,GACdC,aAAc,OACdC,YAAY,EAEZC,cAAe,2BACfC,UAAW,CACPC,KAAM,CACF,CAAC,SAAU,IACX,CAAEC,QAAS,eAEX,CAAC,sBAAuB,CAChB,CAAEC,MAAO,aACT,CAAEA,MAAO,MAAOC,KAAM,UAG9B,CAAC,gCAAiC,CAC1B,CAAED,MAAO,aACT,CAAEA,MAAO,OACT,GACA,CAAEA,MAAO,eAGjB,CAAC,wBAAyB,CAClB,CAAEA,MAAO,aACT,CAAEA,MAAO,UAAWC,KAAM,UAGlC,CAAC,wBAAyB,CAClB,CAAED,MAAO,aACT,CAAEA,MAAO,UAAWC,KAAM,UAGlC,CAAC,eAAgB,CAAED,MAAO,kBAAmBC,KAAM,WACnD,CAAC,QAAS,kBAEdC,MAAO,CACH,CAAC,SAAU,IACX,CAAC,QAAS,CAAEF,MAAO,kBAAmBC,KAAM,SAC5C,CAAC,KAAM,KAEXE,IAAK,CACD,CAAC,aAAc,IACf,CAAC,6CAA8C,CAAC,iBAAkB,GAAI,oBACtE,CAAC,+DAAgE,CAAC,iBAAkB,GAAI,oBACxF,CAAC,6CAA8C,CAAC,iBAAkB,GAAI,oBACtE,CAAC,iBAAkB,kBACnB,CAAC,MAAO,CAAEH,MAAO,YAAaC,KAAM,SACpC,CAAC,UAAW,CACJ,CAAED,MAAO,OACT,CAAEA,MAAO,YAAaC,KAAM,UAEpC,CAAC,IAAK,CAAED,MAAO,YAAaC,KAAM,UAEtCG,WAAY,CACR,CAAC,aAAc,IACf,CAAC,OAAQ,CAAEJ,MAAO,UAAWC,KAAM,cAEvCI,QAAS,CACL,CAAC,UAAW,mBACZ,CAAC,MAAO,CAAEL,MAAO,UAAWC,KAAM,SAClC,CAAC,OAAQ,2BACT,CAAC,QAAS,qB","sources":["../node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        blockComment: ['<!--', '-->'],\n    },\n    brackets: [\n        ['<', '>']\n    ],\n    autoClosingPairs: [\n        { open: '<', close: '>' },\n        { open: '\\'', close: '\\'' },\n        { open: '\"', close: '\"' },\n    ],\n    surroundingPairs: [\n        { open: '<', close: '>' },\n        { open: '\\'', close: '\\'' },\n        { open: '\"', close: '\"' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.xml',\n    ignoreCase: true,\n    // Useful regular expressions\n    qualifiedName: /(?:[\\w\\.\\-]+:)?[\\w\\.\\-]+/,\n    tokenizer: {\n        root: [\n            [/[^<&]+/, ''],\n            { include: '@whitespace' },\n            // Standard opening tag\n            [/(<)(@qualifiedName)/, [\n                    { token: 'delimiter' },\n                    { token: 'tag', next: '@tag' }\n                ]],\n            // Standard closing tag\n            [/(<\\/)(@qualifiedName)(\\s*)(>)/, [\n                    { token: 'delimiter' },\n                    { token: 'tag' },\n                    '',\n                    { token: 'delimiter' }\n                ]],\n            // Meta tags - instruction\n            [/(<\\?)(@qualifiedName)/, [\n                    { token: 'delimiter' },\n                    { token: 'metatag', next: '@tag' }\n                ]],\n            // Meta tags - declaration\n            [/(<\\!)(@qualifiedName)/, [\n                    { token: 'delimiter' },\n                    { token: 'metatag', next: '@tag' }\n                ]],\n            // CDATA\n            [/<\\!\\[CDATA\\[/, { token: 'delimiter.cdata', next: '@cdata' }],\n            [/&\\w+;/, 'string.escape'],\n        ],\n        cdata: [\n            [/[^\\]]+/, ''],\n            [/\\]\\]>/, { token: 'delimiter.cdata', next: '@pop' }],\n            [/\\]/, '']\n        ],\n        tag: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/(@qualifiedName)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, ['attribute.name', '', 'attribute.value']],\n            [/(@qualifiedName)(\\s*=\\s*)(\"[^\">?\\/]*|'[^'>?\\/]*)(?=[\\?\\/]\\>)/, ['attribute.name', '', 'attribute.value']],\n            [/(@qualifiedName)(\\s*=\\s*)(\"[^\">]*|'[^'>]*)/, ['attribute.name', '', 'attribute.value']],\n            [/@qualifiedName/, 'attribute.name'],\n            [/\\?>/, { token: 'delimiter', next: '@pop' }],\n            [/(\\/)(>)/, [\n                    { token: 'tag' },\n                    { token: 'delimiter', next: '@pop' }\n                ]],\n            [/>/, { token: 'delimiter', next: '@pop' }],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/<!--/, { token: 'comment', next: '@comment' }]\n        ],\n        comment: [\n            [/[^<\\-]+/, 'comment.content'],\n            [/-->/, { token: 'comment', next: '@pop' }],\n            [/<!--/, 'comment.content.invalid'],\n            [/[<\\-]/, 'comment.content']\n        ],\n    },\n};\n"],"names":["conf","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","ignoreCase","qualifiedName","tokenizer","root","include","token","next","cdata","tag","whitespace","comment"],"sourceRoot":""}